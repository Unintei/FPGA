
module  PWM_Led
(
    input   wire            sys_clk     ,   //输入工作时钟,频率50MHz
    input   wire            sys_rst_n   ,   //输入复位信号,低电平有效

    output  wire            led_out       ,   //输出行同步信号

);

//****************************************************//
//定义晶振频率50M
    parameter CNT_MAX = 26'd50_000_000 - 1
//定义最小时间单位 1ms
	parameter CNT_MIN = CNT_MAX / 1000
////定义PWM状态周期  10ms
//	parameter PWM_state = CNT_MIN * 10
//定义PWM状态周期    2s
	parameter led_state = 5
//定义PWM状态周期    2s
	parameter T_s = 2000
//定义PWM占空比周期  10ms
	parameter T_ms = 10
//****************************************************//

//reg   define
reg     [15:0]  cnt         ;
reg     [10:0]  cnt_ms         ;
reg             cnt_flag_Ts    ;
reg             cnt_flag_Tms    ;
reg             led_flag    ;
reg     [6:0]   PWM_state ;
wire            led       ,   //输出行同步信号
//********************************************************************//
//***************************** Main Code ****************************//
//********************************************************************//
//cnt:计数器计数1ms
always@(posedge sys_clk or negedge sys_rst_n)
    if(sys_rst_n == 1'b0)
        cnt <= 16'b0;
    else    if(cnt == CNT_MIN)
        cnt <= 16'b0;
    else
        cnt <= cnt + 1'b1;
		
//cnt_ms:计数器计数2000ms
always@(posedge sys_clk or negedge sys_rst_n)
    if(sys_rst_n == 1'b0)
        cnt_ms <= 11'b0;
    else    if(cnt == CNT_MIN && cnt_ms == T_s)
        cnt_ms <= 11'b0;
    else
        cnt_ms <= cnt_ms + 1'b1;

//cnt_flag_Ts:计数器计数满2s标志信号
always@(posedge sys_clk or negedge sys_rst_n)
    if(sys_rst_n == 1'b0)
        cnt_flag_Ts <= 1'b0;
    else    if(cnt == CNT_MAX - 1 && cnt_ms == T_s - 1)
        cnt_flag_Ts <= 1'b1;
    else
        cnt_flag_Ts <= 1'b0;
//cnt_flag_Ts:计数器计数满10s标志信号
always@(posedge sys_clk or negedge sys_rst_n)
    if(sys_rst_n == 1'b0)
        led_flag <= 1'b1;
    else    if(cnt_flag_Ts == led_state - 1 && cnt_ms == T_s - 1 && cnt == CNT_MAX - 1)
        cnt_flag_Ts <= !cnt_flag_Ts;
    else
        cnt_flag_Ts <= cnt_flag_Ts;

//cnt_flag_Tms:计数器计数满10ms标志信号
always@(posedge sys_clk or negedge sys_rst_n)
    if(sys_rst_n == 1'b0)
        cnt_flag_Tms <= 1'b0;
    else    if(cnt == CNT_MAX - 1 && cnt_ms == T_ms - 1)
        cnt_flag_Tms <= 1'b1;
    else
        cnt_flag_Tms <= 1'b0;
		
//led_out_reg:led循环流水
always@(posedge sys_clk or negedge sys_rst_n)
    if(sys_rst_n == 1'b0)
        PWM_state <=  4'b95;
    else    if(cnt == CNT_MAX - 1 && cnt_ms == T_s - 1)	begin
	case(PWM_state)
		4'b95:PWM_state<=4'b85;
		4'b85:PWM_state<=4'b70;
		4'b70:PWM_state<=4'b50;
		4'b50:PWM_state<=4'b20;
		4'b20:PWM_state<=4'b85;
	end

assign  led = (led_out|cnt_flag_Tms)&&(cnt_ms<PWM_state?1'b1:1'b0);
assign	led_out = (led_flag) ? led : ~led ;

endmodule






endmodule


