vendor_name = ModelSim
source_file = 1, D:/Users/Unitn i/Documents/Project/FPGA/course experiment/course experiment_1/.v/PWM_Led.v
source_file = 1, D:/Users/Unitn i/Documents/Project/FPGA/course experiment/course experiment_1/quartus/db/PWM_Led.cbx.xml
design_name = PWM_Led
instance = comp, \led_out~output , led_out~output, PWM_Led, 1
instance = comp, \sys_clk~input , sys_clk~input, PWM_Led, 1
instance = comp, \sys_clk~inputclkctrl , sys_clk~inputclkctrl, PWM_Led, 1
instance = comp, \Add0~0 , Add0~0, PWM_Led, 1
instance = comp, \sys_rst_n~input , sys_rst_n~input, PWM_Led, 1
instance = comp, \sys_rst_n~inputclkctrl , sys_rst_n~inputclkctrl, PWM_Led, 1
instance = comp, \cnt_ms[0] , cnt_ms[0], PWM_Led, 1
instance = comp, \Add0~2 , Add0~2, PWM_Led, 1
instance = comp, \cnt_ms[1] , cnt_ms[1], PWM_Led, 1
instance = comp, \Add0~4 , Add0~4, PWM_Led, 1
instance = comp, \cnt_ms[2] , cnt_ms[2], PWM_Led, 1
instance = comp, \Add0~6 , Add0~6, PWM_Led, 1
instance = comp, \cnt_ms[3] , cnt_ms[3], PWM_Led, 1
instance = comp, \Add0~8 , Add0~8, PWM_Led, 1
instance = comp, \cnt_ms[4] , cnt_ms[4], PWM_Led, 1
instance = comp, \Add0~10 , Add0~10, PWM_Led, 1
instance = comp, \cnt_ms~6 , cnt_ms~6, PWM_Led, 1
instance = comp, \cnt_ms[5] , cnt_ms[5], PWM_Led, 1
instance = comp, \Add0~12 , Add0~12, PWM_Led, 1
instance = comp, \cnt_ms[6] , cnt_ms[6], PWM_Led, 1
instance = comp, \Equal2~3 , Equal2~3, PWM_Led, 1
instance = comp, \Add0~14 , Add0~14, PWM_Led, 1
instance = comp, \cnt_ms[7] , cnt_ms[7], PWM_Led, 1
instance = comp, \Add0~16 , Add0~16, PWM_Led, 1
instance = comp, \cnt_ms~5 , cnt_ms~5, PWM_Led, 1
instance = comp, \cnt_ms[8] , cnt_ms[8], PWM_Led, 1
instance = comp, \Add0~18 , Add0~18, PWM_Led, 1
instance = comp, \cnt_ms[9] , cnt_ms[9], PWM_Led, 1
instance = comp, \Add0~20 , Add0~20, PWM_Led, 1
instance = comp, \cnt_ms[10] , cnt_ms[10], PWM_Led, 1
instance = comp, \Add0~22 , Add0~22, PWM_Led, 1
instance = comp, \cnt_ms[11] , cnt_ms[11], PWM_Led, 1
instance = comp, \Add0~24 , Add0~24, PWM_Led, 1
instance = comp, \cnt_ms[12] , cnt_ms[12], PWM_Led, 1
instance = comp, \Add0~26 , Add0~26, PWM_Led, 1
instance = comp, \cnt_ms~4 , cnt_ms~4, PWM_Led, 1
instance = comp, \cnt_ms[13] , cnt_ms[13], PWM_Led, 1
instance = comp, \Add0~28 , Add0~28, PWM_Led, 1
instance = comp, \cnt_ms[14] , cnt_ms[14], PWM_Led, 1
instance = comp, \Add0~30 , Add0~30, PWM_Led, 1
instance = comp, \cnt_ms~1 , cnt_ms~1, PWM_Led, 1
instance = comp, \cnt_ms[15] , cnt_ms[15], PWM_Led, 1
instance = comp, \Add0~32 , Add0~32, PWM_Led, 1
instance = comp, \cnt_ms~2 , cnt_ms~2, PWM_Led, 1
instance = comp, \cnt_ms[16] , cnt_ms[16], PWM_Led, 1
instance = comp, \Add0~34 , Add0~34, PWM_Led, 1
instance = comp, \cnt_ms~3 , cnt_ms~3, PWM_Led, 1
instance = comp, \cnt_ms[17] , cnt_ms[17], PWM_Led, 1
instance = comp, \Equal2~0 , Equal2~0, PWM_Led, 1
instance = comp, \Equal2~2 , Equal2~2, PWM_Led, 1
instance = comp, \Equal2~1 , Equal2~1, PWM_Led, 1
instance = comp, \Equal2~4 , Equal2~4, PWM_Led, 1
instance = comp, \Equal2~5 , Equal2~5, PWM_Led, 1
instance = comp, \Add0~36 , Add0~36, PWM_Led, 1
instance = comp, \cnt_ms~0 , cnt_ms~0, PWM_Led, 1
instance = comp, \cnt_ms[18] , cnt_ms[18], PWM_Led, 1
instance = comp, \Add1~0 , Add1~0, PWM_Led, 1
instance = comp, \cnt_ts[0]~6 , cnt_ts[0]~6, PWM_Led, 1
instance = comp, \cnt_ts[0] , cnt_ts[0], PWM_Led, 1
instance = comp, \Add1~2 , Add1~2, PWM_Led, 1
instance = comp, \cnt_ts[1]~5 , cnt_ts[1]~5, PWM_Led, 1
instance = comp, \cnt_ts[1] , cnt_ts[1], PWM_Led, 1
instance = comp, \Add1~4 , Add1~4, PWM_Led, 1
instance = comp, \cnt_ts[2]~4 , cnt_ts[2]~4, PWM_Led, 1
instance = comp, \cnt_ts[2] , cnt_ts[2], PWM_Led, 1
instance = comp, \Add1~6 , Add1~6, PWM_Led, 1
instance = comp, \cnt_ts[3]~7 , cnt_ts[3]~7, PWM_Led, 1
instance = comp, \cnt_ts[3] , cnt_ts[3], PWM_Led, 1
instance = comp, \always1~1 , always1~1, PWM_Led, 1
instance = comp, \always1~2 , always1~2, PWM_Led, 1
instance = comp, \Add1~8 , Add1~8, PWM_Led, 1
instance = comp, \cnt_ts[4]~3 , cnt_ts[4]~3, PWM_Led, 1
instance = comp, \cnt_ts[4] , cnt_ts[4], PWM_Led, 1
instance = comp, \Add1~10 , Add1~10, PWM_Led, 1
instance = comp, \cnt_ts[5]~2 , cnt_ts[5]~2, PWM_Led, 1
instance = comp, \cnt_ts[5] , cnt_ts[5], PWM_Led, 1
instance = comp, \Add1~12 , Add1~12, PWM_Led, 1
instance = comp, \cnt_ts[6]~1 , cnt_ts[6]~1, PWM_Led, 1
instance = comp, \cnt_ts[6] , cnt_ts[6], PWM_Led, 1
instance = comp, \Add1~14 , Add1~14, PWM_Led, 1
instance = comp, \cnt_ts[7]~0 , cnt_ts[7]~0, PWM_Led, 1
instance = comp, \cnt_ts[7] , cnt_ts[7], PWM_Led, 1
instance = comp, \always1~0 , always1~0, PWM_Led, 1
instance = comp, \flag_led[0]~6 , flag_led[0]~6, PWM_Led, 1
instance = comp, \flag_led[0] , flag_led[0], PWM_Led, 1
instance = comp, \always2~0 , always2~0, PWM_Led, 1
instance = comp, \Add2~0 , Add2~0, PWM_Led, 1
instance = comp, \flag_led[3]~3 , flag_led[3]~3, PWM_Led, 1
instance = comp, \flag_led[3] , flag_led[3], PWM_Led, 1
instance = comp, \flag_led[2]~2 , flag_led[2]~2, PWM_Led, 1
instance = comp, \flag_led[1]~4 , flag_led[1]~4, PWM_Led, 1
instance = comp, \flag_led[1] , flag_led[1], PWM_Led, 1
instance = comp, \Add2~1 , Add2~1, PWM_Led, 1
instance = comp, \flag_led[2]~5 , flag_led[2]~5, PWM_Led, 1
instance = comp, \flag_led[2] , flag_led[2], PWM_Led, 1
instance = comp, \Mux6~0 , Mux6~0, PWM_Led, 1
instance = comp, \x[11]~3 , x[11]~3, PWM_Led, 1
instance = comp, \x[12] , x[12], PWM_Led, 1
instance = comp, \x[11] , x[11], PWM_Led, 1
instance = comp, \LessThan0~18 , LessThan0~18, PWM_Led, 1
instance = comp, \Mux1~0 , Mux1~0, PWM_Led, 1
instance = comp, \x[17] , x[17], PWM_Led, 1
instance = comp, \Mux2~0 , Mux2~0, PWM_Led, 1
instance = comp, \x[16] , x[16], PWM_Led, 1
instance = comp, \LessThan0~12 , LessThan0~12, PWM_Led, 1
instance = comp, \Mux4~0 , Mux4~0, PWM_Led, 1
instance = comp, \flag_led[0]~_wirecell , flag_led[0]~_wirecell, PWM_Led, 1
instance = comp, \x[14] , x[14], PWM_Led, 1
instance = comp, \x[13]~2 , x[13]~2, PWM_Led, 1
instance = comp, \x[13] , x[13], PWM_Led, 1
instance = comp, \LessThan0~15 , LessThan0~15, PWM_Led, 1
instance = comp, \LessThan0~27 , LessThan0~27, PWM_Led, 1
instance = comp, \Mux0~0 , Mux0~0, PWM_Led, 1
instance = comp, \x[15] , x[15], PWM_Led, 1
instance = comp, \LessThan0~19 , LessThan0~19, PWM_Led, 1
instance = comp, \LessThan0~20 , LessThan0~20, PWM_Led, 1
instance = comp, \LessThan0~23 , LessThan0~23, PWM_Led, 1
instance = comp, \LessThan0~13 , LessThan0~13, PWM_Led, 1
instance = comp, \LessThan0~14 , LessThan0~14, PWM_Led, 1
instance = comp, \LessThan0~21 , LessThan0~21, PWM_Led, 1
instance = comp, \LessThan0~22 , LessThan0~22, PWM_Led, 1
instance = comp, \LessThan0~24 , LessThan0~24, PWM_Led, 1
instance = comp, \LessThan0~16 , LessThan0~16, PWM_Led, 1
instance = comp, \Mux10~0 , Mux10~0, PWM_Led, 1
instance = comp, \x[8] , x[8], PWM_Led, 1
instance = comp, \Mux14~0 , Mux14~0, PWM_Led, 1
instance = comp, \x[4] , x[4], PWM_Led, 1
instance = comp, \LessThan0~6 , LessThan0~6, PWM_Led, 1
instance = comp, \Mux13~2 , Mux13~2, PWM_Led, 1
instance = comp, \x[5] , x[5], PWM_Led, 1
instance = comp, \LessThan0~7 , LessThan0~7, PWM_Led, 1
instance = comp, \Mux12~0 , Mux12~0, PWM_Led, 1
instance = comp, \x[6] , x[6], PWM_Led, 1
instance = comp, \LessThan0~8 , LessThan0~8, PWM_Led, 1
instance = comp, \Mux13~1 , Mux13~1, PWM_Led, 1
instance = comp, \x[7] , x[7], PWM_Led, 1
instance = comp, \LessThan0~26 , LessThan0~26, PWM_Led, 1
instance = comp, \LessThan0~9 , LessThan0~9, PWM_Led, 1
instance = comp, \Mux9~0 , Mux9~0, PWM_Led, 1
instance = comp, \x[9] , x[9], PWM_Led, 1
instance = comp, \LessThan0~10 , LessThan0~10, PWM_Led, 1
instance = comp, \Mux13~0 , Mux13~0, PWM_Led, 1
instance = comp, \x[10] , x[10], PWM_Led, 1
instance = comp, \LessThan0~11 , LessThan0~11, PWM_Led, 1
instance = comp, \LessThan0~17 , LessThan0~17, PWM_Led, 1
instance = comp, \LessThan0~25 , LessThan0~25, PWM_Led, 1
instance = comp, \x[18]~4 , x[18]~4, PWM_Led, 1
instance = comp, \x[18] , x[18], PWM_Led, 1
instance = comp, \led_out~0 , led_out~0, PWM_Led, 1
design_name = hard_block
instance = comp, \~ALTERA_ASDO_DATA1~~ibuf , ~ALTERA_ASDO_DATA1~~ibuf, hard_block, 1
instance = comp, \~ALTERA_FLASH_nCE_nCSO~~ibuf , ~ALTERA_FLASH_nCE_nCSO~~ibuf, hard_block, 1
instance = comp, \~ALTERA_DATA0~~ibuf , ~ALTERA_DATA0~~ibuf, hard_block, 1
