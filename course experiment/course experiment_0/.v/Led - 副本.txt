//
//module  Led
//#(
////****************************************************//
////定义晶振频率50M
//    parameter cnt_ms_MAX = 26'd50_000_000 ,
////定义PWM状态周期最小时间单位 10ms
//	parameter cnt_ms_MIN =  cnt_ms_MAX / 100,
//	parameter T = 4'd10 ,
////定义   2s
//	parameter T_s = 15'd100 
////****************************************************//
//)
//(
//    input   wire            sys_clk     ,   //输入工作时钟,频率50MHz
//    input   wire            sys_rst_n   ,   //输入复位信号,低电平有效
//
//    output  wire            led_out          //输出行同步信号
//
//);
//
//reg		[18:0]		cnt_ms	;
//reg		[7:0]		cnt_ts	;
//reg		[3:0]		flag;
//reg		[3:0]		stear_s;
////reg   define
//
//
//
////********************************************************************//
////***************************** Main Code ****************************//
////********************************************************************//
//
////cnt_ms:计数器计数10ms
//always@(posedge sys_clk or negedge sys_rst_n)
//    if(sys_rst_n == 1'b0)
//        cnt_ms <= 19'b0;
//    else    if(cnt_ms == cnt_ms_MIN - 1)
//        cnt_ms <= 19'b0;
//    else
//        cnt_ms <= cnt_ms + 1'b1;
//
////cnt_ts:计数器计数1s产生
//always@(posedge sys_clk or negedge sys_rst_n)
//    if(sys_rst_n == 1'b0)
//        cnt_ts <= 14'b0;
//    else    if(cnt_ms == cnt_ms_MIN - 1 && cnt_ts == T_s - 1)
//        cnt_ts <= 14'b0;
//    else	if(cnt_ms == cnt_ms_MIN - 1)
//        cnt_ts <= cnt_ts + 1'b1;
//
////********************************************************************//
////********************************************************************//
////********************************************************************//
//
//
////********************************************************************//
////********************************************************************//
////********************************************************************//
//
////flag:计数闪灯次数
//always@(posedge sys_clk or negedge sys_rst_n)
//    if(sys_rst_n == 1'b0)
//        flag <= 4'b0;
//    else    if(cnt_ms == cnt_ms_MIN - 1 && cnt_ts == T_s - 1 && flag == 10 - 1)
//        flag <= 4'b1;
//    else	if(cnt_ms == cnt_ms_MIN - 1 - 1 && cnt_ts == T_s - 1 && stear_s == 0  )
//        flag <= flag + 1'b1;
//
//		
////亮灯对应时间的stear_s
//always@(posedge sys_clk or negedge sys_rst_n)
//    if(sys_rst_n == 1'b0)
//		stear_s <= #1 10;
//    else    if(cnt_ms == cnt_ms_MIN - 1 && cnt_ts == T_s - 1 && stear_s== 0)	begin
//		stear_s<=flag;
//	end
//	else	if(cnt_ms == cnt_ms_MIN - 1 && cnt_ts == T_s - 1&& stear_s != 0 )
//        stear_s <= #1 stear_s - 1'b1;
//
//
//assign	led_out=(flag== 10 - 1)|(flag>0?0:1);
//
//
//
//
//endmodule
//






module Led(
    clk     ,
    rst_n   ,
    led       
);

input      clk  ;// 输入输出信号的位宽？信号类型？为什么这样定义？
input      rst_n;
output     led  ;

reg  [28:0]   cnt0     ;// 这些是什么信号？类型？位宽？如何确定位宽？位宽大了行不行？小了行不行？
wire          add_cnt0 ;//
wire          end_cnt0 ;//
reg  [ 3:0]   cnt1     ;//
wire          add_cnt1 ;//
wire          end_cnt1 ;//
reg           led      ;//
reg  [31:0]   x        ;//
parameter T=10_000_000;// 此处定义的作用？

always @(posedge clk or negedge rst_n)begin// 同步还是异步复位？为什么？
    if(!rst_n)begin  // 高电平还是低电平复位？ 对应开发板上的现象是？
        cnt0 <= 0;
    end
    else if(add_cnt0)begin// 此处代码可以不要吗
        if(end_cnt0)
            cnt0 <= 0;   //什么赋值方式？其特点是？与另一种赋值方式的区别是？
        else
            cnt0 <= cnt0 + 1;
    end
end

assign add_cnt0 = 1;  // 什么意思？
assign end_cnt0 = add_cnt0 && cnt0==x-1 ;  //什么意思？为啥计数终值是x？end_cnt0何时为1？是计数到x-1
//的此时此刻，还是下一时钟到来时？end_cnt0由0变1后的高电平每次持续多久？

always @(posedge clk or negedge rst_n)begin 
    if(!rst_n)begin
        cnt1 <= 0;
    end
    else if(add_cnt1)begin 
        if(end_cnt1)
            cnt1 <= 0;
        else
            cnt1 <= cnt1 + 1;
    end
end

assign add_cnt1 = end_cnt0;  //这种写法什么意思？相当于数电里什么器件的什么功能
assign end_cnt1 = add_cnt1 && cnt1==9-1 ;


always  @(posedge clk or negedge rst_n)begin
    if(rst_n==1'b0)begin
        led <= 1;  // 复位时给led赋值为高电平的意思是？
    end
    else if(add_cnt0 && cnt0==5*T-1)begin// 本代码将T设为1百万，有没有更合适的值？
        led <= 0;//  当led被由高电平拉低时，低电平持续了多长时间？
    end
    else if(end_cnt0)begin
        led <= 1;
    end
end



always  @(*)begin   // 本模块生成组合逻辑电路还是时序逻辑电路？
    if(cnt1==0)
        x = 10*T;// x的值由什么决定？在什么时候改变？
    else if(cnt1==1)
        x = 15*T;
    else if(cnt1==2)
        x = 20*T;
    else if(cnt1==3)
        x = 25*T;
    else if(cnt1==5)
        x = 30*T;
    else if(cnt1==6)
        x = 35*T;
    else if(cnt1==7)
        x = 40*T;
    else if(cnt1==8)
        x = 45*T;
    else 
        x = 50*T;
end

endmodule
